// Generated by view binder compiler. Do not edit!
package com.example.medicandroidapplicationproject.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.medicandroidapplicationproject.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRegisterBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button mBtnReg;

  @NonNull
  public final EditText mTvConfPassword;

  @NonNull
  public final EditText mTvEmail;

  @NonNull
  public final TextView mTvIntro;

  @NonNull
  public final EditText mTvName;

  @NonNull
  public final TextView mTvOrLogin;

  @NonNull
  public final EditText mTvPassword;

  @NonNull
  public final EditText mTvPhone;

  private ActivityRegisterBinding(@NonNull ConstraintLayout rootView, @NonNull Button mBtnReg,
      @NonNull EditText mTvConfPassword, @NonNull EditText mTvEmail, @NonNull TextView mTvIntro,
      @NonNull EditText mTvName, @NonNull TextView mTvOrLogin, @NonNull EditText mTvPassword,
      @NonNull EditText mTvPhone) {
    this.rootView = rootView;
    this.mBtnReg = mBtnReg;
    this.mTvConfPassword = mTvConfPassword;
    this.mTvEmail = mTvEmail;
    this.mTvIntro = mTvIntro;
    this.mTvName = mTvName;
    this.mTvOrLogin = mTvOrLogin;
    this.mTvPassword = mTvPassword;
    this.mTvPhone = mTvPhone;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_register, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRegisterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.mBtnReg;
      Button mBtnReg = ViewBindings.findChildViewById(rootView, id);
      if (mBtnReg == null) {
        break missingId;
      }

      id = R.id.mTvConfPassword;
      EditText mTvConfPassword = ViewBindings.findChildViewById(rootView, id);
      if (mTvConfPassword == null) {
        break missingId;
      }

      id = R.id.mTvEmail;
      EditText mTvEmail = ViewBindings.findChildViewById(rootView, id);
      if (mTvEmail == null) {
        break missingId;
      }

      id = R.id.mTvIntro;
      TextView mTvIntro = ViewBindings.findChildViewById(rootView, id);
      if (mTvIntro == null) {
        break missingId;
      }

      id = R.id.mTvName;
      EditText mTvName = ViewBindings.findChildViewById(rootView, id);
      if (mTvName == null) {
        break missingId;
      }

      id = R.id.mTvOrLogin;
      TextView mTvOrLogin = ViewBindings.findChildViewById(rootView, id);
      if (mTvOrLogin == null) {
        break missingId;
      }

      id = R.id.mTvPassword;
      EditText mTvPassword = ViewBindings.findChildViewById(rootView, id);
      if (mTvPassword == null) {
        break missingId;
      }

      id = R.id.mTvPhone;
      EditText mTvPhone = ViewBindings.findChildViewById(rootView, id);
      if (mTvPhone == null) {
        break missingId;
      }

      return new ActivityRegisterBinding((ConstraintLayout) rootView, mBtnReg, mTvConfPassword,
          mTvEmail, mTvIntro, mTvName, mTvOrLogin, mTvPassword, mTvPhone);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
